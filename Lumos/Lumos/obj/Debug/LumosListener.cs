//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Winship\Desktop\Senior Project\SENIOR PROJ\Lumos\Lumos\Lumos.g4 by ANTLR 4.6.6-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Lumos {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LumosParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface ILumosListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>Print</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint([NotNull] LumosParser.PrintContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Print</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint([NotNull] LumosParser.PrintContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] LumosParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] LumosParser.NumberContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Exponents</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExponents([NotNull] LumosParser.ExponentsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Exponents</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExponents([NotNull] LumosParser.ExponentsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AdditionOrSubtraction</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditionOrSubtraction([NotNull] LumosParser.AdditionOrSubtractionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AdditionOrSubtraction</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditionOrSubtraction([NotNull] LumosParser.AdditionOrSubtractionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>TrigFunction</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrigFunction([NotNull] LumosParser.TrigFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TrigFunction</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrigFunction([NotNull] LumosParser.TrigFunctionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>MultiplicationOrDivision</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicationOrDivision([NotNull] LumosParser.MultiplicationOrDivisionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MultiplicationOrDivision</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicationOrDivision([NotNull] LumosParser.MultiplicationOrDivisionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>EOF</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEOF([NotNull] LumosParser.EOFContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>EOF</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEOF([NotNull] LumosParser.EOFContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Parentheses</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentheses([NotNull] LumosParser.ParenthesesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Parentheses</c>
	/// labeled alternative in <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentheses([NotNull] LumosParser.ParenthesesContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>LessThanOrEqualTo</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLessThanOrEqualTo([NotNull] LumosParser.LessThanOrEqualToContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LessThanOrEqualTo</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLessThanOrEqualTo([NotNull] LumosParser.LessThanOrEqualToContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>LessThan</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLessThan([NotNull] LumosParser.LessThanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LessThan</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLessThan([NotNull] LumosParser.LessThanContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>GreaterThan</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGreaterThan([NotNull] LumosParser.GreaterThanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>GreaterThan</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGreaterThan([NotNull] LumosParser.GreaterThanContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>NotEqualTo</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotEqualTo([NotNull] LumosParser.NotEqualToContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NotEqualTo</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotEqualTo([NotNull] LumosParser.NotEqualToContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>EqualTo</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualTo([NotNull] LumosParser.EqualToContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>EqualTo</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualTo([NotNull] LumosParser.EqualToContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>GreaterThanOrEqualTo</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGreaterThanOrEqualTo([NotNull] LumosParser.GreaterThanOrEqualToContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>GreaterThanOrEqualTo</c>
	/// labeled alternative in <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGreaterThanOrEqualTo([NotNull] LumosParser.GreaterThanOrEqualToContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AssignMinusEquals</c>
	/// labeled alternative in <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignMinusEquals([NotNull] LumosParser.AssignMinusEqualsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignMinusEquals</c>
	/// labeled alternative in <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignMinusEquals([NotNull] LumosParser.AssignMinusEqualsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AssignEquals</c>
	/// labeled alternative in <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignEquals([NotNull] LumosParser.AssignEqualsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignEquals</c>
	/// labeled alternative in <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignEquals([NotNull] LumosParser.AssignEqualsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AssignPlusEquals</c>
	/// labeled alternative in <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignPlusEquals([NotNull] LumosParser.AssignPlusEqualsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignPlusEquals</c>
	/// labeled alternative in <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignPlusEquals([NotNull] LumosParser.AssignPlusEqualsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AssignTimesEquals</c>
	/// labeled alternative in <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignTimesEquals([NotNull] LumosParser.AssignTimesEqualsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignTimesEquals</c>
	/// labeled alternative in <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignTimesEquals([NotNull] LumosParser.AssignTimesEqualsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AssignDivideEquals</c>
	/// labeled alternative in <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignDivideEquals([NotNull] LumosParser.AssignDivideEqualsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignDivideEquals</c>
	/// labeled alternative in <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignDivideEquals([NotNull] LumosParser.AssignDivideEqualsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] LumosParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LumosParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] LumosParser.ExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LumosParser.display"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDisplay([NotNull] LumosParser.DisplayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LumosParser.display"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDisplay([NotNull] LumosParser.DisplayContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LumosParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCall([NotNull] LumosParser.MethodCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LumosParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCall([NotNull] LumosParser.MethodCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LumosParser.methodName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodName([NotNull] LumosParser.MethodNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LumosParser.methodName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodName([NotNull] LumosParser.MethodNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LumosParser.methodCallArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCallArguments([NotNull] LumosParser.MethodCallArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LumosParser.methodCallArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCallArguments([NotNull] LumosParser.MethodCallArgumentsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelop([NotNull] LumosParser.RelopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LumosParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelop([NotNull] LumosParser.RelopContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssop([NotNull] LumosParser.AssopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LumosParser.assop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssop([NotNull] LumosParser.AssopContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LumosParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompileUnit([NotNull] LumosParser.CompileUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LumosParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompileUnit([NotNull] LumosParser.CompileUnitContext context);
}
} // namespace Lumos
